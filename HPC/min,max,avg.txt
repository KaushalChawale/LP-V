#include <iostream>
#include <omp.h>
#include <climits>  

using namespace std;

int main() {
    int size;

    cout << "Enter the number of elements: ";
    cin >> size;

    int* arr = new int[size];

    cout << "Enter " << size << " elements:\n";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }

    int sum = 0;
    int minVal = INT_MAX;
    int maxVal = INT_MIN;

    #pragma omp parallel for reduction(+:sum)
    for (int i = 0; i < size; i++) {
        sum += arr[i];
    }

    #pragma omp parallel for reduction(min:minVal)
    for (int i = 0; i < size; i++) {
        if (arr[i] < minVal) {
            minVal = arr[i];
        }
    }

    #pragma omp parallel for reduction(max:maxVal)
    for (int i = 0; i < size; i++) {
        if (arr[i] > maxVal) {
            maxVal = arr[i];
        }
    }

    double average = (double)sum / size;

    cout << "\nArray Elements: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << "\n";

    cout << "Sum     = " << sum << endl;
    cout << "Average = " << average << endl;
    cout << "Minimum = " << minVal << endl;
    cout << "Maximum = " << maxVal << endl;

    delete[] arr;
    return 0;
}
